{"version":3,"sources":["webpack:///./index.js","webpack:///./color-switch.js"],"names":["colors","randomIntegerFromInterval","min","max","Math","floor","random","refs","startBtn","document","querySelector","stopBtn","body","timer","intervalId","isActive","start","this","setInterval","length","setAttribute","stop","clearInterval","addEventListener","bind"],"mappings":"kHAAA,4B,mBCAA,IAAMA,EAAS,CACX,UACA,UACA,UACA,UACA,UACA,WAGIC,EAA4B,SAACC,EAAKC,GACtC,OAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,IAGhDK,EAAO,CACXC,SAAUC,SAASC,cAAc,yBACjCC,QAASF,SAASC,cAAc,wBAChCE,KAAMH,SAASC,cAAc,SAGzBG,EAAQ,CACZC,WAAY,KACZC,UAAU,EACVC,MAHY,WAINC,KAAKF,WAGTE,KAAKF,UAAW,EAChBE,KAAKH,WAAaI,aAAY,WAC5BjB,EAA0B,EAAG,CAACD,EAAOmB,OAAS,IAC9CZ,EAAKK,KAAKQ,aACR,QADF,eAGIpB,EAAOC,EAA0B,EAAG,CAACD,EAAOmB,OAAS,QAGxD,OAGLE,KAnBY,WAoBVJ,KAAKF,UAAW,EAChBO,cAAcL,KAAKH,YACnBG,KAAKH,WAAa,OAItBP,EAAKC,SAASe,iBAAiB,QAASV,EAAMG,MAAMQ,KAAKX,IACzDN,EAAKI,QAAQY,iBAAiB,QAASV,EAAMQ,KAAKG,KAAKX,M","file":"main.138457cfb1dd980a9153.js","sourcesContent":["import './styles.css';\nimport './color-switch.js';","const colors = [\n    '#FFFFFF',\n    '#2196F3',\n    '#4CAF50',\n    '#FF9800',\n    '#009688',\n    '#795548',\n  ];\n\n  const randomIntegerFromInterval = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  };\n\n  const refs = {\n    startBtn: document.querySelector('[data-action=\"start\"]'),\n    stopBtn: document.querySelector('[data-action=\"stop\"]'),\n    body: document.querySelector('body'),\n  };\n\n  const timer = {\n    intervalId: null,\n    isActive: false,\n    start() {\n      if (this.isActive) {\n        return;\n      }\n      this.isActive = true;\n      this.intervalId = setInterval(() => {\n        randomIntegerFromInterval(0, [colors.length - 1]);\n        refs.body.setAttribute(\n          'style',\n          `background: ${\n            colors[randomIntegerFromInterval(0, [colors.length - 1])]\n          }`,\n        );\n      }, 1000);\n    },\n  \n    stop() {\n      this.isActive = false;\n      clearInterval(this.intervalId);\n      this.intervalId = null;\n    },\n  };\n  \n  refs.startBtn.addEventListener('click', timer.start.bind(timer));\n  refs.stopBtn.addEventListener('click', timer.stop.bind(timer));\n\n\n  \n//  Вариант с функцией:\n\n//   let intervalId= null;\n  \n//   function startChanging() {\n//     if (!intervalId) {\n//       intervalId = setInterval(() => {\n//         randomIntegerFromInterval(0, [colors.length - 1]);\n//         refs.body.setAttribute(\n//           'style',\n//           `background: ${\n//             colors[randomIntegerFromInterval(0, [colors.length - 1])]\n//           }`,\n//         );\n//       }, 1000);\n//     }\n//   }\n  \n//   function stopChanging() {\n//     clearInterval(intervalId);\n//     intervalId = null;\n//   }\n\n//   refs.startBtn.addEventListener('click', startChanging);\n//   refs.stopBtn.addEventListener('click', stopChanging);\n\n//   const randomIntegerFromInterval = (min, max) => {\n//     return Math.floor(Math.random() * (max - min + 1) + min);\n//   };"],"sourceRoot":""}